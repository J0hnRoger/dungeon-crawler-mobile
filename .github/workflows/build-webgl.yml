name: Build and Deploy WebGL

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Checkout (avec LFS)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          clean: true
          fetch-depth: 0  # Important pour semantic versioning
          
      # Forcer la mise à jour et le nettoyage
      - name: Force clean
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git clean -ffdx
          git reset --hard HEAD
          git lfs pull
          
      # Git LFS Pull
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Unity Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-WebGL-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-WebGL-
            Library-

      # Ajouter cette étape pour créer le dossier Library si nécessaire
      - name: Create Library Directory
        run: mkdir -p Library

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true

      - name: Upload WebGL Build
        uses: actions/upload-artifact@v3
        with:
          name: WebGL-build
          path: build/WebGL
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/WebGL
